<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[myBuildingBlocks]]></title>
  <link href="http://antillas21.github.io/atom.xml" rel="self"/>
  <link href="http://antillas21.github.io/"/>
  <updated>2014-02-13T17:12:06-08:00</updated>
  <id>http://antillas21.github.io/</id>
  <author>
    <name><![CDATA[Jose Antonio Antillon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What I Learned Writing My First Ruby Gem]]></title>
    <link href="http://antillas21.github.io/blog/2014/02/06/what-i-learned-writing-my-first-ruby-gem/"/>
    <updated>2014-02-06T14:56:18-08:00</updated>
    <id>http://antillas21.github.io/blog/2014/02/06/what-i-learned-writing-my-first-ruby-gem</id>
    <content type="html"><![CDATA[<h2>Lorem ipsum dolor sit ammet&hellip;</h2>

<p>So I ended with an API like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="ss">Marvelite</span><span class="p">:</span><span class="ss">:API</span><span class="o">::</span><span class="no">Client</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>  <span class="ss">:public_key</span> <span class="o">=&gt;</span> <span class="s1">&#39;abcd&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:private_key</span> <span class="o">=&gt;</span> <span class="s1">&#39;1234&#39;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># fetch a character:</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">character</span><span class="p">(</span><span class="mi">900126</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># but, who knows what id to use to fetch</span>
</span><span class='line'><span class="c1"># a character by name, so, this is more handy:</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">character</span><span class="p">(</span><span class="s1">&#39;Spider-Man&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># want a list of comics this character appears on?</span>
</span><span class='line'><span class="c1"># sure, no problem:</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">character_comics</span><span class="p">(</span><span class="s1">&#39;Spider-Man&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">comicsApp</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;comicsApp&#39;</span><span class="p">,</span> <span class="p">[]);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// then you&#39;ll configure the app...</span>
</span><span class='line'><span class="c1">// part of this config will create a service named Comics</span>
</span><span class='line'><span class="c1">// then we get to the controller, that will use this service:</span>
</span><span class='line'><span class="nx">comicsApp</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;ComicsListController&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="s1">&#39;$scope&#39;</span><span class="p">,</span> <span class="s1">&#39;Comics&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">Comics</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">Comics</span><span class="p">.</span><span class="nx">query</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">comics</span> <span class="o">=</span> <span class="nx">data</span><span class="p">;</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}]</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
